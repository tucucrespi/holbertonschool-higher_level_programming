>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]

test 0 with odd divisor
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test 1 with even divisor
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

test 2 with negative divisor
>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

test 4 with list instead of matrix
>>> matrix_divided(list, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

test 5 with int instead of matrix
>>> matrix_divided(1, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

test 6 with list div
>>> matrix_divided(matrix, [1, 2])
Traceback (most recent call last):
...
TypeError: div must be a number

test 7 with string  div
>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
...
TypeError: div must be a number

test 8 with different row size
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

test 9 with infinity float
>>> matrix_divided([[1e10000, 2], [1, 2]], 2)
[[inf, 1.0], [0.5, 1.0]]

test 10 with div 0
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

test 11 with missing 1 argument
>>> matrix_divided(matrix,)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

test 12 with None
>>> matrix_divided(None, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

test 13 with no arguments
>>> matrix_divided(None, 1)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
